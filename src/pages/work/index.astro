---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from 'astro:content';
const items = (await getCollection('work')).sort((a,b) => (a.data.order ?? 999) - (b.data.order ?? 999));
const rendered = await Promise.all(items.map(async (entry, idx) => {
  const { Content } = await entry.render();
  const colSpan = idx === items.length - 1 && items.length % 2 === 1;
  return { entry, Content, colSpan };
}));
---
<BaseLayout title="Work" description="Selected work and projects">
  <div class="mx-auto max-w-3xl">
    <h1 class="text-3xl font-display">Work</h1>
    <div class="mt-6 grid md:grid-cols-2 auto-rows-fr gap-6">
      {rendered.map(({ entry, Content, colSpan }) => (
        <a href={`/work/${entry.slug}`} class:list={{ 'block': true, 'h-full': true, 'md:col-span-2': colSpan }}>
          <article class="glass rounded-xl border shadow p-5 h-full flex flex-col">
            <h3 class="font-semibold text-lg">{entry.data.title}</h3>
            {entry.data.description && <p class="opacity-80 text-sm mt-1">{entry.data.description}</p>}
            <div class="prose prose-sm dark:prose-invert mt-3 max-w-none flex-1">
              <Content />
            </div>
            {entry.data.tags?.length ? (
              <div class="mt-3 flex flex-wrap gap-2 text-xs tabular-nums">
                {entry.data.tags.map((t) => (<span class="glass rounded px-2 py-1 border">{t}</span>))}
              </div>
            ) : null}
          </article>
        </a>
      ))}
    </div>
  </div>
</BaseLayout>
